checkpoint.dir = /tmp/spark-metrics-monitor/

properties.source.type = ch.cern.PropertiesSourceTest

source.type = kafka
source.consumer.bootstrap.servers = habench101.cern.ch:9092,habench102.cern.ch:9092,habench103.cern.ch:9092
source.consumer.group.id = spark_metric_analyzer
source.topics = db-logging-platform
source.parser.attributes = INSTANCE_NAME METRIC_NAME
source.parser.value.attribute = VALUE
source.parser.timestamp.attribute = END_TIME

results.sink.type = elastic
results.sink.index = itdb_db-metric-results-{analyzed_metric.timestamp:YYYY-MM-dd}/log
notifications.sink.type = elastic
notifications.sink.index = itdb_db-metric-notifications-{timestamp:YYYY-MM-dd}/log
spark.es.net.ssl=true
spark.es.nodes.wan.only=true
spark.es.nodes=es-itdb.cern.ch
spark.es.port=9203
spark.es.net.http.auth.user=<user>
spark.es.net.http.auth.pass=<password>

monitor.CPUUsage.filter.attribute.INSTANCE_NAME = regex:.*
monitor.CPUUsage.filter.attribute.METRIC_NAME = CPU Usage Per Sec
monitor.CPUUsage.pre-analysis.type = weighted-average
monitor.CPUUsage.pre-analysis.period = 10m
monitor.CPUUsage.analysis.type = fixed-threshold
monitor.CPUUsage.analysis.error.upperbound = 800
monitor.CPUUsage.analysis.warn.upperbound  = 600
monitor.CPUUsage.analysis.error.lowerbound = -1

monitor.DEVDB12U-ExecutionsPerSec.filter.attribute.INSTANCE_NAME = DEVDB12U2
monitor.DEVDB12U-ExecutionsPerSec.filter.attribute.METRIC_NAME = Executions Per Sec
monitor.DEVDB12U-ExecutionsPerSec.pre-analysis.type = weighted-average
monitor.DEVDB12U-ExecutionsPerSec.pre-analysis.period = 3m
monitor.DEVDB12U-ExecutionsPerSec.analysis.type = seasonal
monitor.DEVDB12U-ExecutionsPerSec.analysis.season = hour

monitor.ACCINT1-PhysicalReadsPerSec.filter.attribute.INSTANCE_NAME = ACCINT1
monitor.ACCINT1-PhysicalReadsPerSec.filter.attribute.METRIC_NAME = Physical Reads Per Sec
monitor.ACCINT1-PhysicalReadsPerSec.pre-analysis.type = weighted-average
monitor.ACCINT1-PhysicalReadsPerSec.pre-analysis.period = 3m
monitor.ACCINT1-PhysicalReadsPerSec.analysis.type = seasonal
monitor.ACCINT1-PhysicalReadsPerSec.analysis.season = hour
monitor.ACCINT1-PhysicalReadsPerSec.analysis.learning.ratio = 0.5

monitor.ACCINT2-DBBlockGetsPerSec.filter.attribute.INSTANCE_NAME = ACCINT2
monitor.ACCINT2-DBBlockGetsPerSec.filter.attribute.METRIC_NAME = DB Block Gets Per Sec
monitor.ACCINT2-DBBlockGetsPerSec.pre-analysis.type = weighted-average
monitor.ACCINT2-DBBlockGetsPerSec.pre-analysis.period = 3m
monitor.ACCINT2-DBBlockGetsPerSec.analysis.type = seasonal
monitor.ACCINT2-DBBlockGetsPerSec.analysis.season = hour

monitor.ALLRecentAnalysis.filter.attribute.INSTANCE_NAME = regex:.*
monitor.ALLRecentAnalysis.filter.attribute.METRIC_NAME = regex:.*
monitor.ALLRecentAnalysis.missing.max-period = 3m
monitor.ALLRecentAnalysis.pre-analysis.type = weighted-average
monitor.ALLRecentAnalysis.pre-analysis.period = 3m
monitor.ALLRecentAnalysis.analysis.type = seasonal
monitor.ALLRecentAnalysis.analysis.season = hour
monitor.ALLRecentAnalysis.analysis.learning.ratio = 0.2
monitor.ALLRecentAnalysis.analysis.error.ratio = 6
monitor.ALLRecentAnalysis.analysis.warn.ratio = 3
monitor.ALLRecentAnalysis.notificator.error-constant.type = constant
monitor.ALLRecentAnalysis.notificator.error-constant.statuses = ERROR
monitor.ALLRecentAnalysis.notificator.error-constant.period = 10m
monitor.ALLRecentAnalysis.notificator.warn-constant.type = constant
monitor.ALLRecentAnalysis.notificator.warn-constant.statuses = WARNING
monitor.ALLRecentAnalysis.notificator.warn-constant.period = 20m



